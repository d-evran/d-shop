{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { hopiImages, sectionImages } from \"./../data/hopiImages\";\nimport React, { useCallback, useRef, useState } from \"react\";\nimport SectionItem from \"../components/SectionItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HopiScreen = function HopiScreen() {\n  var _useState = useState(\"1\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    imageNumber = _useState2[0],\n    setImageNumber = _useState2[1];\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(ScrollView, {\n      children: [_jsxs(View, {\n        style: styles.top,\n        children: [_jsxs(View, {\n          style: styles.account,\n          children: [_jsx(Text, {\n            children: \"\\uD83D\\uDE4B\\u200D\\u2640\\uFE0F\"\n          }), _jsx(Text, {\n            style: styles.accountTitle,\n            children: \"Merhaba\"\n          }), _jsx(Text, {\n            style: styles.accountTitle,\n            children: \"Didem\"\n          })]\n        }), _jsxs(View, {\n          style: styles.topRight,\n          children: [_jsx(Text, {\n            style: styles.topRightText1,\n            children: \"201.50 Paracik'in var\"\n          }), _jsx(Text, {\n            style: styles.topRightText2,\n            children: \"1 Paracik=1 TL degerinde kullanabilirsin\"\n          }), _jsx(Text, {\n            style: styles.topRightText3,\n            children: \"Paraciklarima Git\"\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.middle,\n        children: [_jsxs(View, {\n          style: styles.middleTop,\n          children: [_jsx(Text, {\n            style: {\n              fontSize: 18,\n              fontWeight: \"700\",\n              color: \"#474747\"\n            },\n            children: \"Teklifi Incele\"\n          }), _jsx(View, {\n            children: _jsxs(Text, {\n              style: {\n                color: \"#474747\",\n                fontSize: 10,\n                backgroundColor: \"#E0E0E0\",\n                paddingVertical: 5,\n                paddingHorizontal: 10,\n                borderRadius: 15\n              },\n              children: [imageNumber, \"/15\"]\n            })\n          })]\n        }), _jsx(FlatList, {\n          data: hopiImages,\n          keyExtractor: function keyExtractor(item) {\n            return item.id.toString();\n          },\n          horizontal: true,\n          showsHorizontalScrollIndicator: false,\n          ItemSeparatorComponent: function ItemSeparatorComponent() {\n            return _jsx(View, {\n              style: styles.separator\n            });\n          },\n          onMomentumScrollEnd: function onMomentumScrollEnd(event) {\n            var index = Math.floor(event.nativeEvent.contentOffset.x);\n            var rest = (index / 320 + 1).toFixed();\n            setImageNumber(rest);\n          },\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsx(View, {\n              children: _jsx(Image, {\n                source: item.image,\n                style: styles.image\n              })\n            });\n          }\n        }), _jsx(TouchableOpacity, {\n          children: _jsx(Image, {\n            source: sectionImages[0].image,\n            style: {\n              resizeMode: 'contain',\n              width: \"100%\"\n            }\n          })\n        }), _jsx(View, {\n          children: sectionImages.map(function (item, index) {\n            return _jsx(View, {\n              children: _jsx(Image, {\n                source: item.image,\n                style: styles.sectionImage\n              })\n            }, index);\n          })\n        }), _jsx(View, {\n          children: _jsx(Text, {\n            style: {\n              fontSize: 18,\n              fontWeight: \"700\",\n              color: \"#474747\"\n            },\n            children: \"Sevecegin Kategoriler\"\n          })\n        })]\n      })]\n    })\n  });\n};\nexport default HopiScreen;\nvar styles = StyleSheet.create({\n  top: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginTop: 10\n  },\n  account: {\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    paddingVertical: 20,\n    paddingHorizontal: 10,\n    borderRadius: 15,\n    width: \"30%\"\n  },\n  accountTitle: {\n    fontSize: 12,\n    fontWeight: \"700\",\n    color: \"#474747\"\n  },\n  topRight: {\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    paddingVertical: 15,\n    paddingHorizontal: 10,\n    borderRadius: 15,\n    width: \"63%\",\n    color: \"#474747\"\n  },\n  topRightText1: {\n    color: \"#E7C85C\",\n    fontWeight: \"800\"\n  },\n  topRightText2: {\n    fontSize: 10,\n    marginVertical: 10\n  },\n  topRightText3: {\n    fontSize: 12,\n    textDecorationLine: \"underline\"\n  },\n  middle: {\n    marginVertical: 15,\n    paddingHorizontal: 15\n  },\n  middleTop: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  image: {\n    width: 320,\n    height: 200,\n    borderRadius: 10,\n    marginVertical: 10\n  },\n  separator: {\n    width: 12\n  },\n  sectionImage: {\n    width: 320,\n    height: 150,\n    marginBottom: 10,\n    borderRadius: 10\n  }\n});","map":{"version":3,"names":["hopiImages","sectionImages","React","useCallback","useRef","useState","SectionItem","jsx","_jsx","jsxs","_jsxs","HopiScreen","_useState","_useState2","_slicedToArray","imageNumber","setImageNumber","View","style","flex","children","ScrollView","styles","top","account","Text","accountTitle","topRight","topRightText1","topRightText2","topRightText3","middle","middleTop","fontSize","fontWeight","color","backgroundColor","paddingVertical","paddingHorizontal","borderRadius","FlatList","data","keyExtractor","item","id","toString","horizontal","showsHorizontalScrollIndicator","ItemSeparatorComponent","separator","onMomentumScrollEnd","event","index","Math","floor","nativeEvent","contentOffset","x","rest","toFixed","renderItem","_ref","Image","source","image","TouchableOpacity","resizeMode","width","map","sectionImage","StyleSheet","create","display","flexDirection","justifyContent","marginTop","marginVertical","textDecorationLine","height","marginBottom"],"sources":["C:/Users/Didem/source/repos/03-MOBIL/Görevler/Görev 12/12-didemevran/src/screens/HopiScreen.jsx"],"sourcesContent":["import {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  Image,\r\n  FlatList,\r\n  ImageBackground,\r\n  ScrollView,\r\n  Dimensions,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { hopiImages, sectionImages } from \"./../data/hopiImages\";\r\nimport React, { useCallback, useRef, useState } from \"react\";\r\nimport SectionItem from \"../components/SectionItem\";\r\n\r\nconst HopiScreen = () => {\r\n  const [imageNumber, setImageNumber] = useState(\"1\");\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <ScrollView>\r\n        {/* Top */}\r\n        <View style={styles.top}>\r\n          <View style={styles.account}>\r\n            <Text>🙋‍♀️</Text>\r\n            <Text style={styles.accountTitle}>Merhaba</Text>\r\n            <Text style={styles.accountTitle}>Didem</Text>\r\n          </View>\r\n          <View style={styles.topRight}>\r\n            <Text style={styles.topRightText1}>201.50 Paracik'in var</Text>\r\n            <Text style={styles.topRightText2}>\r\n              1 Paracik=1 TL degerinde kullanabilirsin\r\n            </Text>\r\n            <Text style={styles.topRightText3}>Paraciklarima Git</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.middle}>\r\n          <View style={styles.middleTop}>\r\n            <Text style={{ fontSize: 18, fontWeight: \"700\", color: \"#474747\" }}>\r\n              Teklifi Incele\r\n            </Text>\r\n            <View>\r\n              <Text\r\n                style={{\r\n                  color: \"#474747\",\r\n                  fontSize: 10,\r\n                  backgroundColor: \"#E0E0E0\",\r\n                  paddingVertical: 5,\r\n                  paddingHorizontal: 10,\r\n                  borderRadius: 15,\r\n                }}\r\n              >\r\n                {imageNumber}/15\r\n              </Text>\r\n            </View>\r\n          </View>\r\n          {/*Hopi Images */}\r\n          <FlatList\r\n            data={hopiImages}\r\n            keyExtractor={(item) => item.id.toString()}\r\n            horizontal={true}\r\n            showsHorizontalScrollIndicator={false}\r\n            ItemSeparatorComponent={() => <View style={styles.separator} />}\r\n            onMomentumScrollEnd={(event) => {\r\n              const index = Math.floor(event.nativeEvent.contentOffset.x);\r\n              let rest = (index / 320 + 1).toFixed();\r\n\r\n              setImageNumber(rest);\r\n            }}\r\n            renderItem={({ item }) => (\r\n              <View>\r\n                <Image source={item.image} style={styles.image} />\r\n              </View>\r\n            )}\r\n          />\r\n\r\n          {/*Section Images */}\r\n          <TouchableOpacity >\r\n            <Image source={sectionImages[0].image} style={{resizeMode:'contain', width:\"100%\"}} />\r\n          </TouchableOpacity>\r\n          <View>\r\n            {sectionImages.map((item, index) => (\r\n              <View key={index}>\r\n                <Image source={item.image} style={styles.sectionImage} />\r\n              </View>\r\n            ))}\r\n          </View>\r\n          {/* Sevecegin Kategoriler */}\r\n          <View>\r\n              <Text style={{ fontSize: 18, fontWeight: \"700\", color: \"#474747\" }}>Sevecegin Kategoriler</Text>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default HopiScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  top: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    marginTop: 10,\r\n  },\r\n  account: {\r\n    backgroundColor: \"white\",\r\n    justifyContent: \"center\",\r\n    paddingVertical: 20,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 15,\r\n    width: \"30%\",\r\n  },\r\n  accountTitle: {\r\n    fontSize: 12,\r\n    fontWeight: \"700\",\r\n    color: \"#474747\",\r\n  },\r\n  topRight: {\r\n    backgroundColor: \"white\",\r\n    justifyContent: \"center\",\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 15,\r\n    width: \"63%\",\r\n    color: \"#474747\",\r\n  },\r\n  topRightText1: {\r\n    color: \"#E7C85C\",\r\n    fontWeight: \"800\",\r\n  },\r\n  topRightText2: {\r\n    fontSize: 10,\r\n    marginVertical: 10,\r\n  },\r\n  topRightText3: {\r\n    fontSize: 12,\r\n    textDecorationLine: \"underline\",\r\n  },\r\n  middle: {\r\n    marginVertical: 15,\r\n    paddingHorizontal: 15,\r\n  },\r\n  middleTop: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  image: {\r\n    width: 320,\r\n    height: 200,\r\n    borderRadius: 10,\r\n    marginVertical: 10,\r\n  },\r\n  separator: {\r\n    width: 12,\r\n  },\r\n  sectionImage: {\r\n    width: 320,\r\n    height: 150,\r\n    marginBottom: 10,\r\n    borderRadius: 10,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}