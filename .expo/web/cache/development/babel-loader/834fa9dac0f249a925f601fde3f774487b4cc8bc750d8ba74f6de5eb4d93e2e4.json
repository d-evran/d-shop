{"ast":null,"code":"import FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCategoryImagesAsync, selectCategoryImages } from \"./tekliflerSlice\";\nimport i18n from \"../../lang/_i18n\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TekliflerScreen = function TekliflerScreen() {\n  var categoryImages = useSelector(selectCategoryImages);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(getCategoryImagesAsync());\n  }, []);\n  return _jsxs(View, {\n    style: {\n      backgroundColor: \"white\",\n      flex: 1,\n      paddingTop: 20\n    },\n    children: [_jsxs(View, {\n      style: styles.top,\n      children: [_jsxs(View, {\n        style: styles.topLeft,\n        children: [_jsx(Feather, {\n          name: \"tag\",\n          size: 24,\n          color: \"black\"\n        }), _jsx(Text, {\n          children: i18n.t('offers.allOffers')\n        })]\n      }), _jsx(MaterialIcons, {\n        name: \"keyboard-arrow-right\",\n        size: 24,\n        color: \"black\"\n      })]\n    }), _jsx(View, {\n      style: {\n        flex: 1\n      },\n      children: _jsx(FlatList, {\n        data: categoryImages,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        style: {\n          margin: 10\n        },\n        numColumns: 2,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsx(TouchableOpacity, {\n            style: styles.gridbox,\n            children: _jsx(Image, {\n              source: {\n                uri: item.image\n              },\n              style: styles.image\n            })\n          }, item.id);\n        }\n      })\n    })]\n  });\n};\nexport default TekliflerScreen;\nvar styles = StyleSheet.create({\n  top: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 10,\n    paddingVertical: 15,\n    borderTopColor: \"#ECECEC\",\n    borderTopWidth: 1,\n    borderBottomColor: \"#ECECEC\",\n    borderBottomWidth: 1\n  },\n  topLeft: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    gap: 8\n  },\n  separator: {\n    width: 12\n  },\n  image: {\n    width: 163,\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  gridbox: {\n    flex: 1,\n    height: 125,\n    margin: 2,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 15,\n    overflow: \"hidden\"\n  }\n});","map":{"version":3,"names":["Feather","MaterialIcons","React","useEffect","useDispatch","useSelector","getCategoryImagesAsync","selectCategoryImages","i18n","jsx","_jsx","jsxs","_jsxs","TekliflerScreen","categoryImages","dispatch","View","style","backgroundColor","flex","paddingTop","children","styles","top","topLeft","name","size","color","Text","t","FlatList","data","keyExtractor","item","id","toString","margin","numColumns","renderItem","_ref","TouchableOpacity","gridbox","Image","source","uri","image","StyleSheet","create","display","flexDirection","justifyContent","paddingHorizontal","paddingVertical","borderTopColor","borderTopWidth","borderBottomColor","borderBottomWidth","gap","separator","width","height","resizeMode","alignItems","borderRadius","overflow"],"sources":["C:/Users/Didem/source/repos/03-MOBIL/Görevler/Görev 18/18-didemevran/src/screens/Kategoriler/TekliflerScreen.jsx"],"sourcesContent":["import {\r\n  FlatList,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCategoryImagesAsync, selectCategoryImages } from \"./tekliflerSlice\";\r\nimport i18n from \"../../lang/_i18n\";\r\n\r\nconst TekliflerScreen = () => {\r\n  const categoryImages = useSelector(selectCategoryImages);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    dispatch(getCategoryImagesAsync());\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ backgroundColor: \"white\", flex: 1, paddingTop: 20 }}>\r\n      <View style={styles.top}>\r\n        <View style={styles.topLeft}>\r\n          <Feather name=\"tag\" size={24} color=\"black\" />\r\n          <Text>{i18n.t('offers.allOffers')}</Text>\r\n        </View>\r\n        <MaterialIcons name=\"keyboard-arrow-right\" size={24} color=\"black\" />\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        {/*Category Images */}\r\n        <FlatList\r\n          data={categoryImages}\r\n          keyExtractor={(item) => item.id.toString()}\r\n          style={{ margin: 10 }}\r\n          numColumns={2}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity key={item.id} style={styles.gridbox}>\r\n              <Image source={{ uri: item.image }} style={styles.image} />\r\n            </TouchableOpacity>\r\n          )}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default TekliflerScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  top: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 15,\r\n    borderTopColor: \"#ECECEC\",\r\n    borderTopWidth: 1,\r\n    borderBottomColor: \"#ECECEC\",\r\n    borderBottomWidth: 1,\r\n  },\r\n  topLeft: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    gap: 8,\r\n  },\r\n  separator: {\r\n    width: 12,\r\n  },\r\n  image: {\r\n    width: 163,\r\n    height: \"100%\",\r\n    resizeMode: \"contain\",\r\n  },\r\n  gridbox: {\r\n    flex: 1,\r\n    height: 125,\r\n    margin: 2,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 15,\r\n    overflow: \"hidden\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}